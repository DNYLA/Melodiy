/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as PlaylistIdImport } from './routes/playlist/$id'
import { Route as ArtistIdImport } from './routes/artist/$id'
import { Route as AlbumIdImport } from './routes/album/$id'
import { Route as AuthenticatedFilesImport } from './routes/_authenticated/files'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistIdRoute = PlaylistIdImport.update({
  path: '/playlist/$id',
  getParentRoute: () => rootRoute,
} as any)

const ArtistIdRoute = ArtistIdImport.update({
  path: '/artist/$id',
  getParentRoute: () => rootRoute,
} as any)

const AlbumIdRoute = AlbumIdImport.update({
  path: '/album/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedFilesRoute = AuthenticatedFilesImport.update({
  path: '/files',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/files': {
      preLoaderRoute: typeof AuthenticatedFilesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/album/$id': {
      preLoaderRoute: typeof AlbumIdImport
      parentRoute: typeof rootRoute
    }
    '/artist/$id': {
      preLoaderRoute: typeof ArtistIdImport
      parentRoute: typeof rootRoute
    }
    '/playlist/$id': {
      preLoaderRoute: typeof PlaylistIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([AuthenticatedFilesRoute]),
  SearchRoute,
  AlbumIdRoute,
  ArtistIdRoute,
  PlaylistIdRoute,
])

/* prettier-ignore-end */
